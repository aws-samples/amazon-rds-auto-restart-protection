{
  "Comment": "RdsAutoRestartWorkFlow: Automatically shutting down RDS instance after a forced Auto-Restart",
  "StartAt": "retrieveRdsInstanceState",
  "States": {
    "retrieveRdsInstanceState": {
      "Type": "Task",
      "Resource": "${LambdaRetrieveInstanceStatus}",
      "TimeoutSeconds": 5,
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "States.TaskFailed"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "fallback"
        }
      ],
      "Next": "isInstanceAvailable"
    },
    "isInstanceAvailable": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.rdsInstanceState",
          "StringEquals": "available",
          "Next": "stopRdsInstance"
        }
      ],
      "Default": "waitFiveMinutes"
    },
    "waitFiveMinutes": {
      "Type": "Wait",
      "Seconds": 300,
      "Next": "retrieveRdsInstanceState"
    },
    "stopRdsInstance": {
      "Type": "Task",
      "Resource": "${LambdaStopRdsInstance}",
      "TimeoutSeconds": 5,
      "Retry": [
        {
          "ErrorEquals": [
            "States.Timeout"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "fallback"
        }
      ],
      "Next": "retrieveRDSInstanceStateStopping"
    },
    "retrieveRDSInstanceStateStopping": {
      "Type": "Task",
      "Resource": "${LambdaRetrieveInstanceStatus}",
      "TimeoutSeconds": 5,
      "Retry": [
        {
          "ErrorEquals": [
            "States.Timeout"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "fallback"
        }
      ],
      "Next": "isInstanceStopped"
    },
    "isInstanceStopped": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.rdsInstanceState",
          "StringEquals": "stopped",
          "Next": "notifyDatabaseAdmin"
        }
      ],
      "Default": "waitFiveMinutesStopping"
    },
    "waitFiveMinutesStopping": {
      "Type": "Wait",
      "Seconds": 300,
      "Next": "retrieveRDSInstanceStateStopping"
    },
    "notifyDatabaseAdmin": {
      "Type": "Task",
      "Resource": "${SnsTopicWorkFlowNotification}",
      "Parameters": {
        "TopicArn": "arn:aws:sns:ap-southeast-2:512072662296:failover",
        "Message.$": "States.Format('Your instance: {} has been stopped. It was restarted by AWS as it exceeded the maximum time in a stopped state - 7 days',$.rdsInstanceId)",
        "Subject.$": "States.Format('RDS auto-restart protection workflow successful - instance: {} stopped', $.rdsInstanceId)"
      },
      "End": true
    },
    "fallback": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${SnsTopicWorkFlowNotification}",
        "Message.$": "$.Cause",
        "Subject.$": "States.Format('RDS auto-restart protection workflow failed - instance: {}', $.rdsInstanceId)"
      },
      "End": true
    }
  }
}
